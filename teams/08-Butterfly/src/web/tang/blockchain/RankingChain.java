package com.tang.blockchain;

import java.math.BigInteger;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import org.web3j.abi.FunctionEncoder;
import org.web3j.abi.TypeReference;
import org.web3j.abi.datatypes.Function;
import org.web3j.abi.datatypes.Type;
import org.web3j.abi.datatypes.generated.Uint256;
import org.web3j.crypto.Credentials;
import org.web3j.protocol.Web3j;
import org.web3j.protocol.core.RemoteCall;
import org.web3j.protocol.core.methods.response.TransactionReceipt;
import org.web3j.tx.Contract;
import org.web3j.tx.TransactionManager;

/**
 * <p>Auto generated code.
 * <p><strong>Do not modify!</strong>
 * <p>Please use the <a href="https://docs.web3j.io/command_line.html">web3j command line tools</a>,
 * or the org.web3j.codegen.SolidityFunctionWrapperGenerator in the 
 * <a href="https://github.com/web3j/web3j/tree/master/codegen">codegen module</a> to update.
 *
 * <p>Generated with web3j version 3.3.1.
 */
public class RankingChain extends Contract {
    private static final String BINARY = "0x60806040526000600255600160035560006005556040516116473803806116478339818101604052604081101561003557600080fd5b81019080805190602001909291908051906020019092919050505033600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508060028190555060008060006101000a81548160ff021916908360028111156100f757fe5b0217905550505061153a8061010d6000396000f3fe6080604052600436106100fe5760003560e01c806385a3863511610095578063c7d0767e11610064578063c7d0767e146103ef578063d2a14d781461041a578063da249db114610445578063df72cdbf146104c6578063ee305fc8146104f1576100fe565b806385a38635146103485780638a843fee1461035f5780639a0e7d6614610376578063a445fd6a146103a1576100fe565b806357529251116100d157806357529251146102105780635ae9a5491461027f57806366ca626a146102aa5780636b1f69a5146102d5576100fe565b80630d6a1da1146101035780632ef796af1461011a57806333ebb1d7146101455780634ac381af146101d5575b600080fd5b34801561010f57600080fd5b5061011861051c565b005b34801561012657600080fd5b5061012f6106dd565b6040518082815260200191505060405180910390f35b34801561015157600080fd5b5061015a6106e4565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561019a57808201518184015260208101905061017f565b50505050905090810190601f1680156101c75780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b3480156101e157600080fd5b5061020e600480360360208110156101f857600080fd5b8101908080359060200190929190505050610721565b005b34801561021c57600080fd5b5061027d6004803603608081101561023357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291908035906020019092919050505061072b565b005b34801561028b57600080fd5b506102946108b4565b6040518082815260200191505060405180910390f35b3480156102b657600080fd5b506102bf610957565b6040518082815260200191505060405180910390f35b3480156102e157600080fd5b5061030e600480360360208110156102f857600080fd5b8101908080359060200190929190505050610961565b604051808473ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060405180910390f35b34801561035457600080fd5b5061035d6109bc565b005b34801561036b57600080fd5b50610374610a82565b005b34801561038257600080fd5b5061038b610b40565b6040518082815260200191505060405180910390f35b6103ed600480360360408110156103b757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610be3565b005b3480156103fb57600080fd5b50610404610d3e565b6040518082815260200191505060405180910390f35b34801561042657600080fd5b5061042f610de0565b6040518082815260200191505060405180910390f35b34801561045157600080fd5b5061047e6004803603602081101561046857600080fd5b8101908080359060200190929190505050610de7565b604051808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020018281526020019550505050505060405180910390f35b3480156104d257600080fd5b506104db610e4d565b6040518082815260200191505060405180910390f35b3480156104fd57600080fd5b50610506610eef565b6040518082815260200191505060405180910390f35b60028081111561052857fe5b60008054906101000a900460ff16600281111561054157fe5b146105b4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b6105bc610f95565b6105c46111d0565b60005b6103f4805490508110156106da576103f3546103f482815481106105e757fe5b906000526020600020906003020160010154600554028161060457fe5b046103f4828154811061061357fe5b9060005260206000209060030201600201819055506103f4818154811061063657fe5b906000526020600020906003020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6103f4838154811061068f57fe5b9060005260206000209060030201600201549081150290604051600060405180830381858888f193505050501580156106cc573d6000803e3d6000fd5b5080806001019150506105c7565b50565b6103f25481565b60606040518060400160405280601281526020017f636f6e7472616374206973207269676874210000000000000000000000000000815250905090565b8060038190555050565b6001600281111561073857fe5b60008054906101000a900460ff16600281111561075157fe5b146107c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b60046040518060a001604052808673ffffffffffffffffffffffffffffffffffffffff1681526020018581526020018481526020018381526020016000815250908060018154018082558091505060019003906000526020600020906005020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020155606082015181600301556080820151816004015550508260056000828254019250508190555050505050565b60006002808111156108c257fe5b60008054906101000a900460ff1660028111156108db57fe5b1461094e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b6103f254905090565b6000600354905090565b6103f4818154811061097257600080fd5b90600052602060002090600302016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154905083565b600160028111156109c957fe5b60008054906101000a900460ff1660028111156109e257fe5b14610a55576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b60026000806101000a81548160ff02191690836002811115610a7357fe5b0217905550610a8061146f565b565b60006002811115610a8f57fe5b60008054906101000a900460ff166002811115610aa857fe5b14610b1b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b60016000806101000a81548160ff02191690836002811115610b3957fe5b0217905550565b600060016002811115610b4f57fe5b60008054906101000a900460ff166002811115610b6857fe5b14610bdb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600554905090565b60006002811115610bf057fe5b60008054906101000a900460ff166002811115610c0957fe5b14610c7c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600060025414610cf257600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc6002549081150290604051600060405180830381858888f19350505050158015610cf0573d6000803e3d6000fd5b505b81600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550806002819055505050565b6000600280811115610d4c57fe5b60008054906101000a900460ff166002811115610d6557fe5b14610dd8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600754905090565b6103f15481565b60048181548110610df757600080fd5b90600052602060002090600502016000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010154908060020154908060030154908060040154905085565b6000600280811115610e5b57fe5b60008054906101000a900460ff166002811115610e7457fe5b14610ee7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600654905090565b600060016002811115610efe57fe5b60008054906101000a900460ff166002811115610f1757fe5b14610f8a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600480549050905090565b600280811115610fa157fe5b60008054906101000a900460ff166002811115610fba57fe5b1461102d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b60008060005b6004805490508110156111cb576006546004828154811061105057fe5b906000526020600020906005020160020154101561109d576006546004828154811061107857fe5b9060005260206000209060050201600201546101f4028161109557fe5b0492506110ce565b600481815481106110aa57fe5b9060005260206000209060050201600201546006546101f402816110ca57fe5b0492505b600754600482815481106110de57fe5b906000526020600020906005020160030154101561112b576007546004828154811061110657fe5b9060005260206000209060050201600301546101f4028161112357fe5b04915061115c565b6004818154811061113857fe5b9060005260206000209060050201600301546007546101f4028161115857fe5b0491505b8183016004828154811061116c57fe5b90600052602060002090600502016004018190555060086004828154811061119057fe5b9060005260206000209060050201600401546103e981106111ad57fe5b01600081548092919060010191905055508080600101915050611033565b505050565b6002808111156111dc57fe5b60008054906101000a900460ff1660028111156111f557fe5b14611268576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600b8152602001807f7374617465206572726f7200000000000000000000000000000000000000000081525060200191505060405180910390fd5b600a6003600480549050028161127a57fe5b046103f2819055506000806103e890505b60008111156112cd576008816103e981106112a257fe5b0154820191506103f25482106112bf57806103f1819055506112cd565b80806001900391505061128b565b50600080600090505b60048054905081101561146a576103f154600482815481106112f457fe5b90600052602060002090600502016004015410156113115761145d565b6004818154811061131e57fe5b9060005260206000209060050201600101546004828154811061133d57fe5b9060005260206000209060050201600401540291506103f460405180606001604052806004848154811061136d57fe5b906000526020600020906005020160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018481526020016000815250908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201555050816103f3600082825401925050819055505b80806001019150506112d6565b505050565b60008060005b6004805490508110156114d5576004818154811061148f57fe5b90600052602060002090600502016002015483019250600481815481106114b257fe5b906000526020600020906005020160030154820191508080600101915050611475565b5060048054905082816114e457fe5b0460068190555060048054905081816114f957fe5b04600781905550505056fea2646970667358221220ad6ef69f31b214afc87db3de027a92481ce3161650f311629706624c7626e8a864736f6c63430007050033";

    protected static final HashMap<String, String> _addresses;

    static {
        _addresses = new HashMap<>();
    }

    protected RankingChain(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    protected RankingChain(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        super(BINARY, contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    public static RemoteCall<RankingChain> deploy(Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit, String _sponsorAccount, BigInteger _Bonus) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_sponsorAccount), 
                new org.web3j.abi.datatypes.generated.Uint256(_Bonus)));
        return deployRemoteCall(RankingChain.class, web3j, credentials, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public static RemoteCall<RankingChain> deploy(Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit, String _sponsorAccount, BigInteger _Bonus) {
        String encodedConstructor = FunctionEncoder.encodeConstructor(Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(_sponsorAccount), 
                new org.web3j.abi.datatypes.generated.Uint256(_Bonus)));
        return deployRemoteCall(RankingChain.class, web3j, transactionManager, gasPrice, gasLimit, BINARY, encodedConstructor);
    }

    public RemoteCall<TransactionReceipt> bonusInfo(BigInteger param0) {
        final Function function = new Function(
                "bonusInfo", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> participantInfo(BigInteger param0) {
        final Function function = new Function(
                "participantInfo", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(param0)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> rewardNum() {
        final Function function = new Function(
                "rewardNum", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> rewardRank() {
        final Function function = new Function(
                "rewardRank", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateSponsorInfo(String userAccount, BigInteger newBons) {
        final Function function = new Function(
                "updateSponsorInfo", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(userAccount), 
                new org.web3j.abi.datatypes.generated.Uint256(newBons)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> InitiationEnd() {
        final Function function = new Function(
                "InitiationEnd", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> updateVotingInfo(String account, BigInteger voting, BigInteger score, BigInteger boxOffice) {
        final Function function = new Function(
                "updateVotingInfo", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.Address(account), 
                new org.web3j.abi.datatypes.generated.Uint256(voting), 
                new org.web3j.abi.datatypes.generated.Uint256(score), 
                new org.web3j.abi.datatypes.generated.Uint256(boxOffice)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getTotalVotes() {
        final Function function = new Function(
                "getTotalVotes", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getParticipantNum() {
        final Function function = new Function(
                "getParticipantNum", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> votingEnd() {
        final Function function = new Function(
                "votingEnd", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getAverageScore() {
        final Function function = new Function(
                "getAverageScore", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getAverageBoxOffice() {
        final Function function = new Function(
                "getAverageBoxOffice", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> getRewardNum() {
        final Function function = new Function(
                "getRewardNum", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<TransactionReceipt> assignBonus() {
        final Function function = new Function(
                "assignBonus", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public RemoteCall<BigInteger> TestOk() {
        final Function function = new Function("TestOk",
                Arrays.<Type>asList(),
                Arrays.<TypeReference<?>>asList(new TypeReference<Uint256>() {}));
        return executeRemoteCallSingleValueReturn(function, BigInteger.class);
    }

    public RemoteCall<TransactionReceipt> TestInfo() {
        final Function function = new Function(
                "TestInfo", 
                Arrays.<Type>asList(), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    //设置函数需要看一下变量类型的对应关系
    public RemoteCall<TransactionReceipt> TestOkSet(BigInteger testNum) {
        final Function function = new Function(
                "TestOkSet", 
                Arrays.<Type>asList(new org.web3j.abi.datatypes.generated.Uint256(testNum)), 
                Collections.<TypeReference<?>>emptyList());
        return executeRemoteCallTransaction(function);
    }

    public static RankingChain load(String contractAddress, Web3j web3j, Credentials credentials, BigInteger gasPrice, BigInteger gasLimit) {
        return new RankingChain(contractAddress, web3j, credentials, gasPrice, gasLimit);
    }

    public static RankingChain load(String contractAddress, Web3j web3j, TransactionManager transactionManager, BigInteger gasPrice, BigInteger gasLimit) {
        return new RankingChain(contractAddress, web3j, transactionManager, gasPrice, gasLimit);
    }

    protected String getStaticDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }

    public static String getPreviouslyDeployedAddress(String networkId) {
        return _addresses.get(networkId);
    }
}
